name: Django CI/CD Pipeline
 
on:
  push:
    branches:
      - Abi
 
 
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
 
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12' # or whichever version you're using
 
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
 
    - name: Apply migrations
      run: |
        python manage.py migrate
 
    - name: Run tests
      run: |
        python manage.py test
 
  deploy:
    runs-on: ubuntu-latest
    needs: test  # Run deployment only if the test job is successful
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.5.3  # Set up SSH agent
      with:
        ssh-private-key: ${{ secrets.EC2_SSH }}  # Use the SSH key stored in GitHub secrets
    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
          set -e
          # Update system
          sudo yum update -y

          # Install development tools
          sudo yum groupinstall "Development Tools" -y

          # Install dependencies for Python 3.12
          sudo yum install -y gcc openssl-devel bzip2-devel libffi-devel

          # Download and install Python 3.12
          cd /usr/src
          sudo wget https://www.python.org/ftp/python/3.12.0/Python-3.12.0.tgz
          sudo tar xzf Python-3.12.0.tgz
          cd Python-3.12.0
          sudo ./configure --enable-optimizations
          sudo make altinstall

          # Set Python 3.12 as the default version
          sudo ln -s /usr/local/bin/python3.12 /usr/bin/python3
          sudo ln -s /usr/local/bin/pip3.12 /usr/bin/pip3

          # Install pip if not available
          sudo python3 -m ensurepip --upgrade

          cd /home/ec2-user

          # Add GitHub to known_hosts to avoid host key verification issues
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          # Check if the directory is a git repo; if not, clone it
          if [ ! -d "geneFlow_v2/.git" ]; then
           git clone git@github.com:karamchandanideepak111/geneFlow_v2.git
          fi

          cd geneFlow_v2
          git config pull.rebase false  # merge
          git pull origin Abi  # Pull the latest code from the branch
          source venv/bin/activate || python3.12 -m venv venv && source venv/bin/activate  # Create venv if it doesn't exist
          pip install -r requirements.txt  # Install any new dependencies
          python manage.py migrate  # Apply migrations
